import os
import telebot
import logging
from telebot.handler_backends import State, StatesGroup
from telebot.storage import StateMemoryStorage

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
TOKEN = os.getenv('BOT_TOKEN')
CHANNEL_ID = os.getenv('CHANNEL_ID')
ADMIN_ID = os.getenv('ADMIN_ID')

state_storage = StateMemoryStorage()
bot = telebot.TeleBot(TOKEN, state_storage=state_storage)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = """
üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∫–∞–Ω–∞–ª–∞ AI Business Lab.

–ß–µ—Ä–µ–∑ –º–µ–Ω—è –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —á–µ–∫-–ª–∏—Å—Ç "20 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –≤ –≤–∞—à–µ–º –±–∏–∑–Ω–µ—Å–µ, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å —Å –ø–æ–º–æ—â—å—é AI"

–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —á–µ–∫-–ª–∏—Å—Ç:
1. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª @AIBusinessLab
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /checklist

üéÅ –ñ–µ–ª–∞—é –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏!
    """
    bot.reply_to(message, welcome_text)

@bot.message_handler(commands=['checklist'])
def handle_checklist_request(message):
    user_id = message.from_user.id
    username = message.from_user.username
    
    try:
        user_channel_status = bot.get_chat_member(chat_id=CHANNEL_ID, user_id=user_id)
        is_subscribed = user_channel_status.status in ['member', 'administrator', 'creator']
        
        if is_subscribed:
            with open('checklist.pdf', 'rb') as checklist:
                bot.send_document(
                    message.chat.id,
                    checklist,
                    caption="–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –í–æ—Ç –≤–∞—à —á–µ–∫-–ª–∏—Å—Ç –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ üéÅ"
                )
            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
            bot.send_message(
                ADMIN_ID,
                f"–ù–æ–≤–∞—è –≤—ã–¥–∞—á–∞ —á–µ–∫-–ª–∏—Å—Ç–∞!\nUser: @{username}\nID: {user_id}"
            )
        else:
            bot.reply_to(
                message,
                f"–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —á–µ–∫-–ª–∏—Å—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª @AIBusinessLab –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!"
            )
    except Exception as e:
        logger.error(f"Error: {e}")
        bot.reply_to(
            message,
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        )

@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = """
ü§ñ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:

/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/checklist - –ø–æ–ª—É—á–∏—Ç—å —á–µ–∫-–ª–∏—Å—Ç
/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

–ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –ø–∏—à–∏—Ç–µ: @desvoroneg
    """
    bot.reply_to(message, help_text)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    logger.info("Bot started")
    bot.infinity_polling()
